OneOS.LoadAPI('/System/API/Bedrock.lua', false)

local program = Bedrock:Initialise()

function FormatBytes(bytes)
	if bytes < 1024 then
		return "< 1KB"
	elseif bytes < 1024 * 1024 then
		return math.ceil(bytes / 1024) .. 'KB'
	elseif bytes < 1024 * 1024 * 1024 then
		--string.format('%.2f', ...) wasn't working for some reason
		local b = math.ceil((bytes / 1024 / 1024)*100)
		return b/100 .. 'MB'
	else
		return '> 1GB'
	end
end

function FolderSize(path)
	if path == '//.git' then
		return 0
	end
	local totalSize = 0
	for i, v in ipairs(OneOS.FS.list(path)) do
		if OneOS.FS.isDir(path..'/'..v) and path..'/'..v ~= '//rom' then
			totalSize = totalSize + FolderSize(path..'/'..v)
		else
			totalSize = totalSize + OneOS.FS.getSize(path..'/'..v)
		end
	end
	return totalSize
end

program:Run(function()
	program:LoadView('main')
	program:GetObject('VersionLabel').Text = 'OneOS '..OneOS.Version

	if fs.getFreeSpace and fs.getSize then
		local systemSize = FolderSize('/System/') + OneOS.FS.getSize('startup')
		local desktopSize = FolderSize('/Desktop/')
		local programsSize = FolderSize('/Programs/')
		local totalSize = FolderSize('/')
		local maxSpace = OneOS.FS.getFreeSpace('/') + totalSize
		program:GetObject('StorageInfoLabel').Text = FormatBytes(totalSize)..' Used, '..FormatBytes(maxSpace - totalSize)..' Available'
		program:GetObject('StorageProgressBar').Maximum = maxSpace
		program:GetObject('StorageProgressBar').Value = {systemSize, programsSize, desktopSize, totalSize-systemSize-programsSize-desktopSize}
		program:GetObject('StorageProgressBar'):ForceDraw()
		program:Draw()
	else
		program:RemoveObject('StorageView')
	end

end)